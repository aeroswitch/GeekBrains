"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
 скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
 очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
 Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
 При этом работа скрипта не должна завершаться.
"""


class OwnError(Exception):
    def __init__(self, text):
        self.text = text


numbers_list = []
while True:
    try:
        user_input = input('Specify a number to append to the list (or type "stop" to quit): ')
        if user_input == 'stop':
            print('Script was stopped by user')
            break
        elif not user_input.isdigit():
            raise OwnError('Error! You should specify a number, not a string')
    except OwnError as error:
        print(error)
        continue
    numbers_list.append(int(user_input))

print(f'Result list: {numbers_list}')
